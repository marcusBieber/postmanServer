{
	"info": {
		"_postman_id": "818d5eaa-4ed0-4eb3-8911-ae871e07b03c",
		"name": "Techstarter-Backend-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39388159",
		"_collection_link": "https://www.postman.com/material-explorer-32776143/2a10c87f-65d4-4f57-b066-67ce7eeec7d4/collection/btmyevz/techstarter-backend-api?action=share&source=collection_link&creator=39388159"
	},
	"item": [
		{
			"name": "GET /status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response contains status: 'ok'\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('ok');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/status",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"status"
					]
				},
				"description": "# Status Endpoint\n\nThis endpoint makes an HTTP GET request to retrieve the status information.\n\n### Request Body\n\nThis endpoint does not require a request body.\n\n### Response Body\n\nThe response contains the status information in JSON format."
			},
			"response": []
		},
		{
			"name": "GET /users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is an array of users\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"pm.test(\"Each user has name and email\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    jsonData.forEach(user => {\r",
							"        pm.expect(user).to.have.property(\"name\");\r",
							"        pm.expect(user).to.have.property(\"email\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /user/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response contains name and email\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('name');",
							"    pm.expect(jsonData).to.have.property('email');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/user/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Response contains user id\", function () {",
							"    const jsonData = pm.response.json();",
							"    const bodyData = JSON.parse(pm.request.body.raw)",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.expect(jsonData.name).to.equal(bodyData.name)",
							"    pm.expect(jsonData.email).to.equal(bodyData.email)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Dimitri Tarasowski\",\n    \"email\": \"dimi@example.com\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /user/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/user/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /user/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response contains updated user info\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const bodyData = JSON.parse(pm.request.body.raw)\r",
							"\r",
							"    pm.expect(jsonData.name).to.eql(bodyData.name);\r",
							"    pm.expect(jsonData.email).to.eql(bodyData.email);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Lukas Probst\",\r\n    \"email\": \"lukas@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/user/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /user/999",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Error message for non-existent user\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"error\", \"User not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/user/999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"999"
					]
				}
			},
			"response": []
		}
	]
}